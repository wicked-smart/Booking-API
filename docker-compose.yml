services:
  db:
    image: postgres
    volumes:
    - postgres-data:/var/lib/postgresql/data
    ports:
    - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=prem

  web:
    build: ./booking_api/
    volumes:
    - ./booking_api:/app
    ports:
    - "8000:8000"
    environment:
    - DB_HOST=db
    - DB_USER=prem
    - DB_PASSWORD=postgres
    - DB_NAME=postgres 
    - STRIPE_WEBHOOK_SECRET=whsec_KhG1qA8cTG9kdNYZjaj7nr0IVUuC0xFy
    command: >
      sh -c "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"

    depends_on:
    - db  
  
  # webhook:
  #   build: 
  #     context: ./webhook
  #     dockerfile: Dockerfile
  #   environment:
  #    - FLASK_APP=webhook.py 
  #    - FLASK_ENV=development
  #    - STRIPE_WEBHOOK_SECRET=whsec_KhG1qA8cTG9kdNYZjaj7nr0IVUuC0xFy
  #   ports:
  #    - "5000:5000"
  #   depends_on:
  #    - web

  ngrok-flask:
    image: wernight/ngrok
    ports:
      - "4040:4040"  # Ngrok web interface port
    environment:
      - NGROK_AUTHTOKEN='r3wDdpmLoPXFL8HTU91_5SFcWY8GsdWgaQBHJnPNW'
    command: ["ngrok", "http", "web:8000"]
    depends_on:
      - web

  redis:
    image: redis:latest
    ports:
      - "6378:6379"
  
  celery:
    build:
      context: ./booking_api
      dockerfile: Dockerfile.celery  # Create a Dockerfile for your Celery worker configuration
    volumes:
    - ./booking_api:/app
    environment:
      - DB_HOST=db
      - DB_USER=prem
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
      - REDIS_URL=redis://redis:6379/0  # Redis connection URL

    depends_on:
      - db
      - redis

volumes:
  postgres-data: 